/ Programa que toma la primera localidad de una secuencia de seis numeros
/ Román Mauricio Elias Valencia - A01656603
/ Ernesto Miranda Solis - A01656828
/ Sebastian Iñigo López - A01661179
Jump 		Begin 	

/Variables para la creacion de lista
Size,			DEC 		6
Counter,		DEC 		5

/Variables númericas
One,			DEC	 		1
Two,			DEC 		2
Four,			DEC 		4
MinOne,			DEC 		-1

/Listas de manejo
ListAddress,	HEX 		330		/Almacena las localidades de la lista
ListAddPointer,	HEX 		330		/apunta al número actual
ListAllocation,	HEX 		300		/Almacena la primera localidad
															
/Stack 
StackPointer,	HEX 		0		/Primera localidad de stack

/Temporary labels
t0,					DEC 		0 		/Almacena valores temporales
t1,					DEC 		0
temp, 			DEC 		0		/Variable temporal para load y store
				
Begin,			Input  						
						

  

    				Load 		ListAddress 	/Guarda la primera localidad que va a ser la base
    				StoreI		ListAllocation

    				Load 		ListAllocation 	/Se sube el pointer un valor arriba
    				
    				Store 		ListAllocation

 					Load 		Counter			/Carga el counter que va a reducir cada que lollamen hasta acabar

EnterItems,		Skipcond 	800				
				Jump 		StopEnterItems

    			Load 		ListAddPointer 	/Sube el pointer un valor
                Add 		One
                Store 		ListAddPointer

                Input 						/Ingresa el digitp
                StoreI 		ListAddPointer	/Guarda su localidad

                Load 		Counter 		/Reduce el counter por uno
                Add 		MinOne
                Store 		Counter

                Jump 		EnterItems		

StopEnterItems,	Load 		ListAddPointer 	/Subimos la el pointer
                Add 		One
                Store 		ListAddPointer 	/Reiniciamos la lista para el nuevo inicio
                Store		ListAddress		/ da la nueva localidad base



                /Guarda el stack
                Load 		StackPointer 	/Mueve el pointer una localidad arriba
                Add 		MinOne			
                Store 		StackPointer

                /Guarda el nuevo tamaño de la secuencia
                Load 		ListAllocation 	/Carga la localidad del nuevo valor
                Add 		MinOne			

                Store 		temp 			/Guarda de forma temporal el valor

                LoadI 		temp 			/carga su localidad del valor temporal
                							
                Store 		temp 			/Guarda la localidad del valor temporal
                LoadI 		temp 			/Vuelve a cargar pero ahora de forma indirecta para obtener el nuevo tamaño
                StoreI 		StackPointer 	/Guarda el stack

                
                Load 		StackPointer 	/Subimos el pointer del stack un valor
                Add 		MinOne
                Store 		StackPointer

                Load 		ListAllocation 	/Toma la localidad de la lista
                Add 		MinOne			/Se resta un valor para tomar la localidad anterior
                Store 		temp			/Se obtiene la localidad de la lista
                LoadI 		temp
                Add 		One				/Se regresa un valor para no perder el balance de la lista
              
EndMain,       	Halt